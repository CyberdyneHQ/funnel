name: test-and-deploy-to-staging-pipeline

on:
  push:
    branches: [ aws ]
  pull_request:
    branches: [ aws ]

jobs:
  # test:

  #   runs-on: ubuntu-latest

  #   container:
  #     image: lucasalt/act_base:latest

  #   steps:
  #   - uses: actions/checkout@v2
  #     with:
  #       ref: aws

  #   - name: Create env file
  #     run: |
  #       touch instance/settings.py
  #       echo "${{ secrets.SERVER_ENV_TEST }}" > instance/settings.py

  #   - name: Copy requirements file
  #     run: |
  #       cat requirements_test.txt > requirements.txt
  #       cat requirements.txt

  #   - name: Run Docker Compose using the docker-compose.ci.yml file
  #     run: |
  #       echo --- Building only web first ---
  #       docker-compose -f docker-compose.ci.yml build --no-cache web
  #       echo --- Starting up all the containers ---
  #       docker-compose -f docker-compose.ci.yml up --build --exit-code-from web
  #       echo --- Completed test cases ---
   
  # build:

  #   needs: test

  #   runs-on: ubuntu-latest

  #   steps:

  #   - name: Checkout
  #     uses: actions/checkout@v2
  #     with:
  #       ref: aws

  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  #   - name: Set up Docker Buildx
  #     id: buildx
  #     uses: docker/setup-buildx-action@v1

  #   - name: Build and push
  #     id: docker_build
  #     uses: docker/build-push-action@v2
  #     with:
  #       context: ./
  #       file: ./Dockerfile
  #       push: true
  #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/funnel:latest

  deploy:

    #needs: build
    
    runs-on: ubuntu-latest

    steps:

    - name: Checkout the SSH Key
      uses: actions/checkout@v2

    # - name: Create SSH key
    #   run: |
    #     mkdir -p ~/.ssh/
    #     echo "$SSH_PRIVATE_KEY" > ../private.key
    #     sudo chmod 600 ../private.key
    #     echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    #   shell: bash
    #   env:
    #     SSH_PRIVATE_KEY: ${{secrets.DEV_SSH_KEY}}
    #     SSH_KNOWN_HOSTS: ${{secrets.DEV_KNOWN_HOSTS}}

    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEV_HOST_IP }}
        username: ec2-user
        key: ${{ secrets.DEV_SSH_KEY }}
        port: 22
        script: |
          docker image prune -f 
          cd funnel
          docker-compose down
          git fetch origin aws
          git reset --hard origin/aws  &&  echo 'git fetched and hard reset'
          aws s3 cp s3://v2-alpha-test-environment-files/container_env instance/settings.py
          docker-compose build 
          docker run vivekdurai/funnel flask db upgrade
          docker-compose up -d

    # - name: Install SSH key
    #   uses: shimataro/ssh-key-action@v2
    #   with:
    #     key: ${{ secrets.DEV_SSH_KEY }}
    #     name: github
    #     known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    # - name: Adding Known Hosts
    #   run: ssh-keyscan -H ${{ secrets.DEV_HOST_IP }} >> ~/.ssh/known_hosts

    # - name: Make executeable
    #   run: chmod +x ./aws_dev_deploy.sh

    # - name: Run the deploy script
    #   run: ./aws_dev_deploy.sh

    # - name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}

    # - name: Get branch name (merge)
    #   if: github.event_name != 'pull_request'
    #   shell: bash
    #   run: echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

    # - name: Get branch name (pull request)
    #   if: github.event_name == 'pull_request'
    #   shell: bash
    #   run: echo "BRANCH=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
